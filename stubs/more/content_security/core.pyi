from collections.abc import Callable
from typing import Literal

from morepath import App
from morepath.request import Request
from morepath.response import Response
from more.content_security.policy import ContentSecurityPolicy

NONCE_LENGTH: int

def random_nonce() -> str: ...

class ContentSecurityRequest(Request):
    @property
    def content_security_policy(self) -> ContentSecurityPolicy: ...
    @content_security_policy.setter
    def content_security_policy(self, value: ContentSecurityPolicy) -> None: ...
    def content_security_policy_nonce(self, target: Literal["script", "style"]) -> str: ...
    @property
    def content_security_policy_nonce_value(self) -> str: ...

class ContentSecurityApp(App): ...

def default_policy() -> ContentSecurityPolicy: ...
def default_policy_apply_factory() -> Callable[[ContentSecurityPolicy, Request, Response], None]: ...
def content_security_policy_tween_factory(app: ContentSecurityApp, handler: Callable[[Request], Response]) -> Callable[[Request], Response]: ...
