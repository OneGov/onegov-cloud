from _typeshed import StrPath
from typing import Literal

from depot.io.interfaces import _FileContent, _UUIDStr, FileStorage, StoredFile

class LocalStoredFile(StoredFile):
    def __init__(self, file_id: _UUIDStr, local_path: StrPath) -> None: ...
    def read(self, n: int = -1) -> bytes: ...
    def readable(self) -> Literal[True]: ...
    def seekable(self) -> Literal[False]: ...
    def close(self) -> None: ...
    @property
    def closed(self) -> bool: ...

class LocalFileStorage(FileStorage):
    storage_path: StrPath
    def __init__(self, storage_path: StrPath) -> None: ...
    def get(self, file_or_id: StoredFile | str) -> StoredFile: ...
    def create(self, content: _FileContent, filename: str | None = None, content_type: str | None = None) -> _UUIDStr: ...
    def replace(self, file_or_id: StoredFile | _UUIDStr, content: _FileContent, filename: str | None = None, content_type: str | None = None) -> _UUIDStr: ...
    def delete(self, file_or_id: StoredFile | _UUIDStr) -> None: ...
    def exists(self, file_or_id: StoredFile | _UUIDStr) -> bool: ...
    def list(self) -> list[str]: ...
