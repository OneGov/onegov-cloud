from collections.abc import Callable
from inspect import FullArgSpec
from typing import Any, TypeVar
from typing_extensions import ParamSpec

_T = TypeVar('_T')
_P = ParamSpec('_P')

def arginfo(callable: Callable[..., Any]) -> FullArgSpec: ...
def is_cached(callable: Callable[..., Any]) -> bool: ...
def get_callable_info(callable: Callable[_P, _T]) -> tuple[Callable[_P, _T], object, bool]: ...
def fake_empty_init() -> None: ...

class Dummy: ...

WRAPPER_DESCRIPTOR: object

def get_class_init(class_: type[Any]) -> Callable[..., _T]: ...
