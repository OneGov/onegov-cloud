#!/usr/bin/env bash
set -euo pipefail

SELF="$( cd "$(dirname "$0")" ; pwd -P )"
REPO="$(dirname "$SELF")"

# The following block ontains the Sentry Auth token to announce releases on
# sentry.io. This has been encrypted as follows:
#
# echo "my-token" | gpg --encrypt --armor \
#   --recipient patrick.bucher@seantis.ch \
#   --recipient fabian.reinhard@seantis.ch \
#   --recipient tobias.reinhard@seantis.ch \
#   --recipient marc.sommerhalder@seantis.ch \
#   --recipient chantal.trutmann@seantis.ch \
#   --recipient david.salvisberg@seantis.ch \
#   --recipient claudio.pilotti@seantis.ch \
#   --recipient cyrill.kuettel@seantis.ch \
#   --recipient reto.tschuppert@seantis.ch
#
# Be sure to update `configure-sentry` below and update the comment above
# if the intended recipients change. You will also want to create a new
# token with only the permission "project:releases" at that point and invalidate the old one:
#
#   https://sentry.io/settings/account/api/auth-tokens/
#
SENTRY_TOKEN_ENCRYPTED="
-----BEGIN PGP MESSAGE-----

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
=fOxf
-----END PGP MESSAGE-----
"

function configure-sentry() {
    SENTRY_AUTH_TOKEN="$(\
        echo "$SENTRY_TOKEN_ENCRYPTED" | gpg --decrypt --quiet
    )"

    export SENTRY_ORG="seantis-gmbh"
    export SENTRY_AUTH_TOKEN
}

function current-version() {
    git ls-remote --tags origin \
        | awk -F '/' '{print $NF}' \
        | sort --reverse --version-sort\
        | head -n 1
}

function announce-release-on-sentry-io() {
    local version="$1"
    local current_commit="$2"
    local previous_commit="$3"

    curl "https://sentry.io/api/0/organizations/${SENTRY_ORG}/releases/" \
        -X POST \
        -H "Authorization: Bearer ${SENTRY_AUTH_TOKEN}" \
        -H 'Content-Type: application/json' \
        -d "{
            \"version\": \"${version}\",
            \"refs\": [{
                \"repository\":\"OneGov/onegov-cloud\",
                \"commit\":\"${current_commit}\",
                \"previousCommit\":\"${previous_commit}\"
            }],
            \"projects\": [\"onegov-cloud\"]
        }"
}

function new-version() {
    local version
    version="$(current-version)"

    local year
    year="$(date +"%Y")"

    local build

    if echo "${version}" | grep "release-${year}" -q; then
        build="$(echo "${version}" | awk -F '.' '{print $NF}')"
    else
        build="0"
    fi

    echo "release-$year.$((build + 1))"
}

function release() {
    git fetch --quiet

    if ! git diff origin/master --exit-code --quiet; then
        echo "There are unpulled/unpushed remote changes, please update before release"
        exit 1
    fi

    if [[ "$(git branch --show-current)" != "master" ]]; then
        echo "A release can only be created on the master"
        exit 1
    fi

    current=$(current-version)
    new=$(new-version)
    short="${new/release-/}"

    echo "Releasing $new (previous: $current)"
    "$SELF"/changes "$new" > "$REPO/CHANGES.md"
    sed -i.bak "s/__version__.*/__version__ = '${short}'/g" src/onegov/core/__init__.py
    rm src/onegov/core/__init__.py.bak

    pushd "$REPO" > /dev/null
    git add CHANGES.md
    git add src/onegov/core/__init__.py
    git commit --no-verify -m "Release $(new-version)"
    git tag "$(new-version)"
    git push
    git push --tags
    popd > /dev/null

    local previous_commit
    previous_commit="$(git rev-list -n 1 "$current")"

    local current_commit
    current_commit="$(git rev-parse --verify HEAD)"

    announce-release-on-sentry-io "onegov-cloud:${new}" "$current_commit" "$previous_commit"
}

configure-sentry
release
