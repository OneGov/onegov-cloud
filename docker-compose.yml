services:
    # For trying the image locally.
    # Either build locally with "docker compose build onegov-cloud", or use an
    # image from the container registry.
    # onegov-cloud:
    #     build: .
    #     # image: ghcr.io/onegov/onegov-cloud:ogc-1625-container-tests
    #     command: /app/bin/onegov-server --mode production -c /app/onegov.yml
    #     network_mode: "host"
    #     working_dir: /app
    #     volumes:
    #         - ./onegov.yml:/app/onegov.yml
    #         - /usr/local/var/onegov/mail/postmark:/usr/local/var/onegov/mail/postmark
    #         - /usr/local/var/onegov/mail/smtp:/usr/local/var/onegov/mail/smtp
    #         - /usr/local/var/onegov/files:/usr/local/var/onegov/files
    #         - /usr/local/var/onegov/depot:/usr/local/var/onegov/depot
    #         - /usr/local/var/onegov/sms:/usr/local/var/onegov/sms

    # For trying out different postgres versions.
    # Use postgresql://postgres:postgres@localhost:5444/onegov in onegov.yml
    # Note that this won't work with tests and "onegov-core transfer"!
    #
    # postgres:
    #     image: postgres:14
    #     environment:
    #         - POSTGRES_PASSWORD=postgres
    #         - POSTGRES_USER=postgres
    #         - POSTGRES_DB=onegov
    #     ports:
    #         - "5444:5432"

    smtp4dev:
        image: rnwood/smtp4dev:latest
        restart: always
        ports:
            - "8081:80"  # Web UI
            - "1025:25"  # forwarding to port 25; configure your smtp4dev to listen on port 25
            - "143:143"  # IMAP
        volumes:
            - smtp4dev-data:/smtp4dev

    d3renderer:
        image: node
        command: sh -c "rm -rf d3-renderer && git clone https://github.com/seantis/d3-renderer.git && cd d3-renderer && npm install && ./node_modules/.bin/phantomjs server.js"
        environment:
            - OPENSSL_CONF=/etc/ssl
        working_dir: /app
        ports:
            - "1337:1337"


volumes:
    data01:
        driver: local
    smtp4dev-data:
        driver: local
