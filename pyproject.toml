[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
log_level = "INFO"
testpaths = ["tests"]
python_classes = []
python_files = ["test_*.py"]
timeout = 300
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore:pkg_resources is deprecated as an API",
    "ignore:Deprecated call to `pkg_resources\\.declare_namespace\\('.*'\\):DeprecationWarning",
    # potential issue for future upgrades
    "ignore:invalid escape sequence '[^']+':DeprecationWarning:pdfrw.*:",
    "ignore:invalid escape sequence '[^']+':DeprecationWarning:webassets.*:",
    "ignore:'crypt':DeprecationWarning:passlib.*:",
    # fixed upstream
    "ignore:(tagMap|typeMap) is deprecated:DeprecationWarning:pyasn1.*:",
    "ignore:'cgi':DeprecationWarning:webob.*:",
]

[tool.coverage.run]
data_file = "/tmp/.coverage"
include = ["*/onegov/*"]
omit = ["*/tests/*", "**/upgrade.py"]

[tool.coverage.report]
ignore_errors = true
exclude_lines = [
    "pragma: no cover",
    "pragma: unreachable",
    "assert_never[(]",
    "@overload",
    "raise NotImplementedError",
    "raise AssertionError[(].unreachable.[)]",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__."
]

[tool.mypy]
python_version = "3.11"
follow_imports = "silent"
namespace_packages = true
explicit_package_bases = true
strict = true
implicit_reexport = true
warn_unreachable = true
warn_return_any = false
# FIXME: remove sqlalchemy when upgrading to SQlAlchemy 2.0
untyped_calls_exclude = "sqlalchemy,pycurl,onegov.core.types"
plugins = "sqlmypy"
mypy_path = "$MYPY_CONFIG_FILE_DIR/src:$MYPY_CONFIG_FILE_DIR/stubs"

[[tool.mypy.overrides]]
# ignore missing imports for packages that have no stubs available
module = [
    # FIXME: Do we really need this? We have this implemented ourselves
    #        in OCQMS, so we could just copy that code over... plus the
    #        standard lib technically supports some ISO-8601 formats as well
    "isodate.*",
    # TODO: Consider switching to fasttext-langdetect
    #       langdetect is really, really slow by comparison...
    "langdetect.*",
    # FIXME: Remove after https://github.com/lipoja/URLExtract/issues/164
    "urlextract.*",
]
ignore_missing_imports = true


[tool.bandit]
exclude_dirs = [
    "tests",
    "*/**/upgrade.py",
    "*/**/upgrades.py"
]
skips = [
    # ignore asserts
    "B101",
    # ignore meta-codes, we are aware of the implications
    "B403",
    "B404",
    "B405",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
src = ["src", "test", "stubs"]
include = [
    "pyproject.toml",
    "src/**/*.py",
    "tests/**/*.py",
    "stubs/**/*.pyi"
]
line-length = 79
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = [
    "B0",
    "B904",
    "B909",
    "C4",
    "COM818",
    "D2",
    "D301",
    "D4",
    "E",
    "F",
    "FLY002",
    "I002",
    "ISC",
    "N",
    "PERF",
    "PGH004",
    "PIE",
    "PYI",
    "Q",
    "RUF",
    "SIM",
    "SLOT",
    "UP",
    "W"
]
ignore = [
    "B007",
    "C420",
    "D200",
    "D201",
    "D202",
    "D204",
    "D205",
    "D209",
    "D210",
    "D211",
    "D400",
    "D401",
    "D412",
    "E226",
    "E402",
    "E711",
    "E712",
    "E741",
    "N818",
    "PYI019",
    "PYI041",
    "RUF012",
    "RUF013",
    "RUF021",
    "RUF022",
    "RUF023",
    "RUF031",
    "RUF035",
    "RUF052",
    "RUF056",
    # TODO: We would like to enable SIM102, but it has a ton of
    #       violations, so it's a big job to clean it up
    "SIM102",
    "SIM103",
    "SIM105",
    "SIM108",
    "SIM110",
    "SIM118",
    "SIM210",
    "SIM910",
    "UP009",
    "UP012",
    "UP032",
    "UP038",
]
unfixable = []
external = ["TC"]
allowed-confusables = ["Ã—"]
preview = true

[tool.ruff.lint.extend-per-file-ignores]
"src/onegov/core/types.py" = ["B018"]
"reportlab_settings.py" = ["N", "I002"]
"*.pyi" = [
    "E501",
    "N",
    "Q",
    # NOTE: We would prefer to set a different target version instead
    #       but there's no per-file-target-version
    "UP",
]
"tests/**/*.py" = [
    "B018",
    "C4",
    "D",
    "E301",
    "E302",
    "E303",
    "E304",
    "E305",
    "E306",
    "F841",
    "FLY002",
    "I002",
    "ISC",
    "N",
    "Q",
    "PERF",
    "PGH",
    "PIE",
    "PYI",
    "RUF",
    "SIM",
    "UP",
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = [
    "afterFlowable",
    "HSTORE",
    "sortKey",
    "URL",
    "UUID"
]
classmethod-decorators = [
    # NOTE: We can potentially get rid some of these with SQLAlchemy 2.0
    #       since they should cleanly combine with classmethod
    "declared_attr",
    "expression",
    "comparator",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.flake8-quotes]
avoid-escape = true
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.ruff]
extend-markup-names = ["chameleon.utils.Markup"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = "dynamic"
